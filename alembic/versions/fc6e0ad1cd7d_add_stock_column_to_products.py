"""add stock column to products

Revision ID: fc6e0ad1cd7d
Revises: 0258b85eff43
Create Date: 2025-02-21 05:38:54.377222

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fc6e0ad1cd7d"
down_revision: Union[str, None] = "0258b85eff43"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("inventory", schema=None) as batch_op:
        batch_op.drop_index("ix_inventory_id")
        batch_op.drop_index("ix_inventory_product_id")

    op.drop_table("inventory")
    with op.batch_alter_table("movement", schema=None) as batch_op:
        batch_op.drop_index("ix_movement_id")
        batch_op.drop_index("ix_movement_product_id")

    op.drop_table("movement")
    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.drop_index("ix_products_id")
        batch_op.drop_index("ix_products_name")

    op.drop_table("products")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("category", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("price", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("sku", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="products_pkey"),
    )
    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.create_index("ix_products_name", ["name"], unique=False)
        batch_op.create_index("ix_products_id", ["id"], unique=False)

    op.create_table(
        "movement",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("product_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("source_store_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("target_store_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="movement_pkey"),
    )
    with op.batch_alter_table("movement", schema=None) as batch_op:
        batch_op.create_index("ix_movement_product_id", ["product_id"], unique=False)
        batch_op.create_index("ix_movement_id", ["id"], unique=False)

    op.create_table(
        "inventory",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("product_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("store_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("min_stock", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="inventory_pkey"),
    )
    with op.batch_alter_table("inventory", schema=None) as batch_op:
        batch_op.create_index("ix_inventory_product_id", ["product_id"], unique=False)
        batch_op.create_index("ix_inventory_id", ["id"], unique=False)

    # ### end Alembic commands ###
